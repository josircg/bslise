# Generated by Django 2.2.28 on 2023-06-07 18:46
from django.core.validators import EMPTY_VALUES
from django.db import migrations


def load_geographic_extend(apps, schema_editor):
    """Adds GeographicExtend and update Platform corresponding geographicExtend"""
    from platforms.models import GEOGRAPHIC_EXTEND_CHOICES

    dct = {k: v for k, v in GEOGRAPHIC_EXTEND_CHOICES}

    db_alias = schema_editor.connection.alias

    GeographicExtend = apps.get_model("platforms", "GeographicExtend")

    for value in dct.values():
        GeographicExtend.objects.using(db_alias).get_or_create(description=value)

    Platform = apps.get_model("platforms", "Platform")

    for platform in Platform.objects.using(db_alias).filter(geographicExtend__isnull=False, geoExtend__isnull=True):
        value = dct.get(platform.geographicExtend)

        if value in EMPTY_VALUES:
            geo_extend = GeographicExtend.objects.using(db_alias).create(
                description=platform.get_geographicExtend_display()
            )
        else:
            geo_extend = GeographicExtend.objects.using(db_alias).get(description=value)

        platform.geoExtend = geo_extend
        platform.save()


class Migration(migrations.Migration):
    dependencies = [
        ('platforms', '0007_auto_20230607_1546'),
    ]

    operations = [
        migrations.RunPython(load_geographic_extend)
    ]
